#+LATEX_HEADER: \usepackage{blindtext}
#+LATEX_HEADER: \usepackage{multirow}
#+OPTIONS: toc:nil
#+DATE:
#+AUTHOR: Heitor L. Werneck
#+TITLE:  Annotations/Reviews

* On Information Coverage for Location Category Based Point-of-Interest Recommendation (2015)

  # We tackle the same problem, however not focusing on it.

  "Based on the norm
  that similar users are likely to have similar preference of
  POIs, the current recommendation techniques mainly focus
  on users’ preference to provide accurate recommendation results. This tends to generate a list of homogeneous POIs that
  are clustered into a narrow band of location categories (like
  food, museum, etc.) in a city. However, users are more interested to taste a wide range of flavors that are exposed in
a global set of location categories in the city."

  "formulate a new POI recommendation problem, namely
  top-K location category based POI recommendation"

  "The recommendation, called conventional top-K POIs in this paper, tends to
  generate a set of homogeneous POIs (e.g., all about restaurant), which are often similar to the majority of the POIs visited by the previous users.
  However, users are often interested to be recommended with a set of heterogeneous POIs
  that can cover the different types (e.g., food, sports, etc) of
  locations in the targeted city."

  "The existing POI recommendation methods tend to
  recommend a user the POIs that belong to the same set of
  categories as those visited by the user."

  "We formulate the issue as one multiobjective optimization problem solving which recommends
  top-K location category based POIs (LC-POIs)."

  "Following the same spirit of user-based collaborative filtering 
  methods (Zheng et al. 2010b; Ye et al. 2011b), we
  compute relevance of POIs by gauging users’ similarity
  based on their previous check-in activities"

  Finding top-K LC-POIs is to optimize the relevance and
  information coverage of a set of POIs based on check-in
  data.

  The article first choose the state-of-art POI recommendation technique to compute the relevance function.(Temporal collaborative filtering)

  Formulate POI relevance as $R(l_j) = \alpha \times c^{t}_{u,t,l_j}+(1-\alpha)\times c^{s}_{u,t,l_j}$.

  "Information coverage considers how a set of POIs, $L = {l_1 , \cdots , l_m }$, collectively enclose different location categories derived from check-ins."

  "A POI enjoys different popularity of
  being in one category when it is checked at different time
  points. We consider time-aware information coverage in this
  paper."

  Compute information coverage of a set of POIs as eq. ref:eq:infocov.

#+BEGIN_EXPORT latex
\begin{equation}
\label{eq:infocov}
I(L) = \sum_{a_q \in A} w_{a_q}^{t} cov^{t}_{a_q}(L)
\end{equation}
#+END_EXPORT

$cov^{t}_{a_q}(L)$ (eq. ref:eq:covtaq) measures the degree to which category $a_q$ is covered by at least one POI in the set L at time t.

#+BEGIN_EXPORT latex
\begin{equation}
\label{eq:covtaq}
cov^{t}_{a_q} = 1- \prod_{l_j \in L} [1-cov^{t}_{a_q}(l_j)]
\end{equation}
#+END_EXPORT

$cov^{t}_{a_q}(l_j)$ is the degree to which POI l_j covers the category $a_q$ at t.

Uses adaptation of the TF-IDF (Term Frequency-Inverse Document Frequency) to compute the category weight.

Formulate greedy algorithm to solve this problem. Has monotone submodularity, property that gives theoretical guarantees for algorithm to maximize the multi-objective function.

- Foursquare (2010-2011), Gowalla (2009, 2010)
- Compared to UST.
- Shannon entropy to measure diversity, precision and recall.


* Personalized Location Recommendation by Aggregating Multiple Recommenders in Diversity (2017)



"We design a location recommendation framework that combines results from various recommenders that consider various factors. Our framework estimates, for each individual user, the underlying influence of each factor to her."

"Despite any differences between ratings and check-ins, conventional collaborative filtering (CF) methods (e.g., [1]) are computationally applicable to check-in data."

"some users are easily affected by their friends
and do not care much about the places to visit, while some others
are more independent with more concern of the places."

"A pair-based optimization
problem is formulated and solved to identify the underlying preference of each user."

Select 11 of the most representative recommenders that cover all the factors that state-of-the-art methods uses.

Propose Learn-Update-Recommend-Aggregate(LURA) to combine recommenders.

Basically LURA recommend by learning the user preferences and getting a list of scores of all recommenders and applying preferences to their scores to get the top-n items to the user.

#+BEGIN_EXPORT latex
\begin{table}
  \scriptsize
    \centering
    \begin{tabular}{|c|c|c|c|}
    \hline
    \multicolumn{4}{|c|}{Methods}\\
    \hline
    User-based CF & Item-based CF & Probabilistic & Matrix factorization \\ 
    \hline
    User-based CF      & Item-based CF & Power-law model&Implicit matrix factorization \\
    Friend-based CF    & Time-weighted CF & Kernel density model&\\
    Friend-based CF    &&Spatial kernel density model&\\
    Friend-location CF &&&\\
    Geo-Distance CF    &&&\\
    Category CF        &&&\\\hline
    \end{tabular}
\caption{LURA recommenders/methods}
\end{table}
#+END_EXPORT

- Foursquare and Gowalla
- Precision and recall
- Compared to the baseline methods used in the LURA and variations of LURA.
- Also is compared to USG, iGLSR, RankBoost, BPRMF, SBPR, GeoMF.
- No Signed Rank Test is done, low difference to USG.


* A Composite Recommendation System for Planning Tourist Visits (2016)
  Tour problem.

  "In trip planning, a user is interested in suggestions for
  places to visits, or places of interest (POI), that could be very
  heterogeneous, e.g., museum, park, restaurant, etc."

  cost and time to visit each POI. (User may want to constraint with a budget) 

  The method consist of two cores: the recommender engine that recommend items to user based on their preferences and the composite recommendation system that receives the scores of the items and its overall popularity for a user. The composite recommendation system recommend focus on recommending the best package of items to the user, it includes a constraint checker module.

  Package score is modeled using overall popularity, intra package diversity and a item-item method to estimate rating.

  "The user
  interacts with the system by specifying a cost budget, a time
  budget and an integer K which is the number of packages to
  recommend."


  - Tripadvisor.
  - Precision, diversity (mean ILD), harmonic mean of precision and diversity
  - Compare the proposed method with cite:xie10_break.


* *DP-POIRS: A Diversified and Personalized Point-of-Interest Recommendation System (2017)

This paper describes a Diversified and Personalized Point-Of-Interest Recommendation System (DP-POIRS) by leveraging the geo-social relationships between POIs.

The system consists of three components.
- The first component geo-social distance measuring component is used to construct a correlation matrix to describe the geo-social distance between points of interests.
- The second component point-of-interest partition component, divides the interest points into diverse clusters by using the spectral clustering algorithm over the correlation matrix.
- The third component personalized sorting component, finds out the user's favorite interest points from each cluster, and then sorts them into a list of recommendation by the use of matrix factorization algorithms.

The geo-social distance between places (P_i , P_j ) is defined as

\begin{equation}
\begin{aligned}
D_{gs}(p_i, p_j) = \omega \cdot D_p(p_i,p_j) + (1-\omega)\cdot D_s(p_i, p_j)\\
w \in [0,1]\\
D_p(p_i, p_j) = \frac{E(p_i, p_j)}{maxD}\\
\end{aligned}
\end{equation}

$E(p_i, p_j)$ is the Euclidian (or road network) distance between $p_i$ and $p_j$, and $maxD$ is the maximum distance between any pair of two points in P.

$D_s(p_i, p_j)$ is the social relation between place $p_i$ and $p_j$ that is defined as $D_s(p_i,p_j)= 1 - \frac{|CU_{ij}|}{|U_{p_i}\cup U_{p_j}|}$.

$U_{p_{k}}$ is the collection of users who have visited $p_k$.

"$CU_{i}$" is tbe collection of users that visited or are friend of users that visited p_i. $CU_{ij}= CU_i \cup CU_j$


\begin{equation}
S(p_i, p_j) = 1 - D_{gs}(p_i, p_j)
\end{equation} 

$n\times n$ correlation matrix can be obtained by calculating $S(p_i, p_j)$.

- Use the spectral clustering algorithm to partition the POI set into several diversified clusters, where each cluster represents one kind of POIs and the POIs in each cluster are closely related to each other both in social and location aspects.
- Use three types of matrix factorization algorithms to estimate the number of visits to a POI by a user to evaluate the POI’s popularity.(Algorithms for Non-negative Matrix Factorization, MIT, 2000)

See more in figure ref:fig:dp_poirs.

#+CAPTION: DP-Poirs framework diagram.
#+NAME: fig:dp_poirs
#+LABEL: fig:dp_poirs
[[./img/dp_poirs.png]]

* Location perspective-based neighborhood-aware POI recommendation in location-based social networks (2019)

  Location neighborhood-aware weighted probabilistic matrix factorization is proposed (L-WMF)

  Use Probabilistic Matrix Factorization(PMF) as main model.
  
  Adapt PMF to sample negative values and smaller weights to unobserved items.

  Uses the premise that the "latent feature
  vector of i is close to the latent feature vectors of all its neighboring POIs".
  
  Regularize the method with location perspective, giving more probability to POIs near visited POIs.

  - Gowalla and Foursquare
  - Precision, recall
  - Baselines: MostPopular, LRT, MGMPFM, iGSLR, BPRMF, WMF, L-WMF.

* *Recommendations based on user effective point-of-interest path (2019)
  "algorithms tend to generate a list of unrelated POIs that user cannot continuously visit due to lack of appropriate associations."

  "In this paper, we first proposed a concept that can recommend POIs by considering both category diversity features of POIs and possible associations of POIs. Then, we developed a top-k POI recommendation model based on effective path coverage"

  "According to users behavioral characteristics, a set of
POIs that users used to continuously visit is defined as a
valid path, the associations among POIs are characterized
by the users access records, and users tend to continuously
access the POIs with strong associations. Thus, we analyzed
the associations among the POIs to determine a valid path,
and generated a set of recommended POIs to cover more
effective paths for users to continuously access in a convenient way."

"This research has made the following significant contributions: We proposed the concept of effective path in this paper. In  order to avoid a large number of invalid recommendations, in this work, measures were taken to make the recommended POIs cover more effective and convenient paths for users to access based on associations among POIs. By increasing the effectiveness of path coverage, it can improve the diversity, because the higher the effective path coverage is, the more service categories will the POI set contain. Meanwhile, this method can improve the probability of valid recommendations, allowing users to choose different effective paths from a set of POIs rather than a single POI to visit."

- Effective path coverage is NP hard.
- Developed approximate knapsack algorithm (AKA)
- Foursquare and Gowalla.

A effective path set is denoted as $L = l_1 , l_2 ... l_n$ and $n \geq 1$ , L(P) denotes the effective path set in POI set P.

- The model computes a relevance score for each POI.
- Employ FP-growth algorithm to analyze users check-in data for mining of all associated services categories, and to calculate the effective path coverage by taking this information into account.
- Finally the model computes a score for each POI that incorporates both de relevance score and effective path coverage.

Uses a CF algorithm to obtain the POI relevance (score).

For a given user u at time t the relevance score is computated as eq. ref:eq:effectivepathrelscore:

#+BEGIN_EXPORT latex
\begin{equation}
\label{eq:effectivepathrelscore}
R_{u,t,p_i} = \alpha \times \bar{c}^{(t)}_{u,t,p_i} + (1-\alpha) \times \bar{c}^{(s)}_{u,t,p_i}
\end{equation}
#+END_EXPORT

$\bar{c}^{(t)}_{u,t,p_i}$ is the recommendation score that user u will visit $p_i$ at time $t$. (It is computed based on the similarity of users check-in activities.
$\bar{c}^{(s)}_{u,t,p_i}$ is the recommendation score computed based on the spatial influence of POIs previously visited by users.

*frequent pattern mining concept is used.

FP-growth algorithm is used to mine the correlatade services.

In eq. ref:eq:effectivepathfo: $\sigma(u,t,p^k)$ is the recommendation score of the POI set $p^k$ to the user u at time t; $R_{p^k}$ is the relevance that user u will visit the POI set $p^{k}$ at time t; $E(p^k)$ is the effective path coverage score.

#+BEGIN_EXPORT latex
\begin{equation}
\label{eq:effectivepathfo}
max \sigma(u,t,p^k) = (1-\beta)R_{p^k} + \beta E(p^k)
\end{equation}
#+END_EXPORT


- Foursquare(2010) and Gowalla(2010).
- Comparated to user-spatial-temporal unified framework(UST) and LC-POIs. cite:chen2015information,yuan2013time
- Precision, recall and diversity (Service diversity).


* *GeoTeCS: Exploiting Geographical, Temporal, Categorical and Social aspects for Personalized POI Recommendation (2016)

  "proposes a matrix factorization based location recommender that incorporates all the major aspects -the categorical, the geographical, the social, and the temporal aspects into a single model"

  "The user’s affinity towards the nearby locations adds the constraint of the spatial aspect in this domain"
  
#+CAPTION: Impact of different aspect in check-in trends.
#+NAME: fig:diff_aspects
[[./img/diff_aspects.png]]


"For instance, the research cite:ye10_locat has shown that only - 96% of people share < 10% of the commonly visited places and - 87% of people share nothing at all."

GeoTeCS is a weighted matrix factorization based model.

"The basic idea behind GeoTeCS is to divide the check-in locations into L grids or regions ($g_l$ such that $\mathbb{L} = \{g_1 , g_2 , ...., g_L \}$)."

"GeoTeCS realizes the locations as the sequential grids of equal area ensuring each area has location with some check-ins."

Defines the user influence area or activity area as the region/area which depicts high probability of the check-in of user.

Influence area of POIs have the normal distribution centered at them.(uses normal distribution to model influence of POIs in grids)

Model incorporate the notion that locations with the same category of POI visited in the past might have potential visits.
Also if POI in the vicinity have check-in time similar to visited POI them this is a potential POI to be visited by the user.

The influence of user u to POI p is modeled with the combination of the social and user influences.

- Gowalla and Weeplaces.
- 5-fold cross-validation.
- top 5, 10, 15, 20
- Precision, recall, f-score
- Compared to Ye et al. cite:ye10_locat, LBSNRank cite:jin12_lbsnr, Wang et al. cite:wang13_locat, FMFMGM, GeoMFTD, GeoTeCS

"(the dense patches within 0.5 km indicate that most of the users’ had the check-ins in the near places)."


* User modeling for point-of-interest recommendations in location-based social networks: the state-of-the-art (2017)

  The structure of a LBSN is as figure ref:fig:lbsn_struct.

  "There are three types
  of data in LBSNs: (1) user check-ins: the data record users’
  check-ins at different geographical locations at different
  times; (2) users’ social relationships: the data record users’
social relationships; and (3) social activities: the data record
the social activities where users participate at different
geographical locations and at different times, or shared
social media information."

  Summarize data characteristics of LBSN as the following:
  
  - Multilayer Heterogeneous Networks.
  - Geographical-Temporal Characteristics.
  - Explicit Location Description.
  - Unambiguous Social Relationships.
  - User-Driven Big Data.
  - Data Sparsity.

  #+CAPTION: Frameworkof LBSNs.
  #+NAME: fig:lbsn_struct
  [[./img/lbsn_struct.png]]


  Separate user modeling algorithms into four main categories:
  - Pure check-in data-based user modeling
  - Geographical information-based user modeling
    - Bayesian Model-Based user modeling
    - Latent Factor Model.
      - Geographical neighbors
      - Geographical regions
  - Spatiotemporal information-based user modeling
    - Time-Aware User Modeling.
    - Sequential Influence-Based User Modeling
  - Geosocial information-based user modeling
    

  Show the following challenges in recommendation:

  - Mining Users’ Check-Ins and Social Activities in LBSNs
  - The Relevance between Users’ Check-Ins and Social Relationships.
  - The Interpretation of Recommendations.
  - Scalability.
  - Privacy Preservation.

  bibliographystyle:plain
  bibliography:review.bib



* Personalized Re-ranking for Recommendation (2019)



